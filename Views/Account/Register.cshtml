@model RobustEcommerceApp.Models.RegisterViewModel

@{
    ViewData["Title"] = "Register";
}

<h2>Register</h2>

<!-- Display general errors -->
@if (!ViewData.ModelState.IsValid && ViewData.ModelState.Values.Any(v => v.Errors.Count > 0))
{
    <div class="alert alert-danger">
        <ul>
            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
            {
                <li>@error.ErrorMessage</li>
            }
        </ul>
    </div>
}

<form asp-action="Register" method="post">
    @Html.AntiForgeryToken()
    <div class="form-group">
        <label asp-for="Email" class="control-label"></label>
        <input asp-for="Email" class="form-control" placeholder="Enter your email" aria-label="Email" />
        <span asp-validation-for="Email" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Password" class="control-label"></label>
        <input asp-for="Password" class="form-control" placeholder="Enter your password" type="password" aria-label="Password" />
        <small class="form-text text-muted">Password must be at least 8 characters, with an uppercase letter and a digit.</small>
        <span asp-validation-for="Password" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="ConfirmPassword" class="control-label"></label>
        <input asp-for="ConfirmPassword" class="form-control" placeholder="Confirm your password" type="password" aria-label="Confirm Password" />
        <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
    </div>
    <div class="form-group mt-3">
        <button type="submit" class="btn btn-primary" id="registerSubmitBtn" disabled>Register</button>
    </div>
    <div class="mt-3">
        <p>
            Already have an account?
            <a asp-controller="Account" asp-action="Login">Login here</a>.
        </p>
    </div>
</form>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        // Enable submit button when the form is valid
        const registerForm = document.querySelector("form");
        const registerSubmitBtn = document.getElementById("registerSubmitBtn");

        registerForm.addEventListener("input", () => {
            registerSubmitBtn.disabled = !registerForm.checkValidity();
        });
    </script>
}
