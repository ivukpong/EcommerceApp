@model RobustEcommerceApp.Models.LoginViewModel

@{
    ViewData["Title"] = "Login";
}

<h2>Login</h2>

@if (!string.IsNullOrEmpty(ViewBag.LoginError as string))
{
    <div class="alert alert-danger">@ViewBag.LoginError</div>
}

<form asp-action="Login" method="post">
    @Html.AntiForgeryToken()
    <div class="form-group">
        <label asp-for="Email" class="control-label"></label>
        <input asp-for="Email" class="form-control" placeholder="Enter your email" aria-label="Email" />
        <span asp-validation-for="Email" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Password" class="control-label"></label>
        <input asp-for="Password" class="form-control" placeholder="Enter your password" type="password" aria-label="Password" />
        <span asp-validation-for="Password" class="text-danger"></span>
    </div>
    <div class="form-group form-check">
        <input asp-for="RememberMe" class="form-check-input" type="checkbox" />
        <label asp-for="RememberMe" class="form-check-label">Remember Me</label>
    </div>
    <div class="form-group mt-3">
        <button type="submit" class="btn btn-primary" disabled id="loginSubmitBtn">Login</button>
    </div>
    <div>
        <p>
            <a asp-controller="Account" asp-action="Register">Register as a new user</a>
        </p>
    </div>
</form>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        // Enable submit button when the form is valid
        const loginForm = document.querySelector("form");
        const loginSubmitBtn = document.getElementById("loginSubmitBtn");

        loginForm.addEventListener("input", () => {
            loginSubmitBtn.disabled = !loginForm.checkValidity();
        });
    </script>
}
